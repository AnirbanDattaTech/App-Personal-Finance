# --- Environment & Secrets ---
# Ignore environment variables and secrets files - CRITICAL
.env
.env.*
# Local environment variables for frontend projects (e.g., for react-ui folder)
.env.local
.env.development.local
.env.test.local
.env.production.local

.venv/
env/
venv/
ENV/
.streamlit/secrets.toml

# --- OS Specific ---
# Ignore OS generated files
.DS_Store
Thumbs.db
Desktop.ini # Windows desktop.ini files

# --- IDE Specific ---
# Ignore IDE configuration folders
.idea/
.vscode/
.spyderproject
.spyproject
.ropeproject

# --- Python ---
# Ignore byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
*.so

# Ignore distribution / packaging artifacts
.Python
# build/ # Can conflict with frontend 'build' folder if not specific
# dist/  # Can conflict with frontend 'dist' folder if not specific
develop-eggs/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Ignore PyInstaller artifacts
*.manifest
*.spec

# Ignore installer logs
pip-log.txt
pip-delete-this-directory.txt

# Ignore unit test / coverage reports (Python)
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache # General cache, can be broad
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
# cover/ # Can conflict with frontend 'coverage' folder

# Ignore translations artifacts
*.mo
*.pot

# Ignore Django specific log files
# *.log (already covered by generic *.log below)

# Ignore Flask specific instance folder
instance/
.webassets-cache

# Ignore Scrapy specific folder
.scrapy

# Ignore Sphinx documentation build output
docs/_build/

# Ignore PyBuilder output
.pybuilder/
target/

# Ignore Jupyter Notebook checkpoints
.ipynb_checkpoints

# Ignore IPython configuration
profile_default/
ipython_config.py

# --- Lock Files ---
# It's generally recommended to COMMIT package lock files (Pipfile.lock, poetry.lock,
# package-lock.json, yarn.lock, uv.lock) as they ensure reproducible builds.
# If you have a strong reason not to, you can uncomment them.
# Pipfile.lock
# poetry.lock
# pdm.lock
# uv.lock
# package-lock.json # Node.js - Usually committed
# yarn.lock         # Node.js - Usually committed
# bun.lockb         # Node.js (Bun) - Usually committed

# Ignore PEP 582 directory
__pypackages__/

# Ignore Celery artifacts
celerybeat-schedule
celerybeat.pid

# Ignore SageMath parsed files
*.sage.py

# Ignore mypy cache
.mypy_cache/
.dmypy.json
dmypy.json

# Ignore Pyre cache
.pyre/

# Ignore pytype cache
.pytype/

# Ignore Cython debug symbols
cython_debug/

# Ignore PyPI configuration file
.pypirc

# --- Node.js / Frontend (e.g., for a 'react-ui/' or 'react/' folder) ---
# Log files
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Dependency directories (CRITICAL for Node.js projects)
node_modules/ # If your react-ui folder is at the root, this is fine.
             # If react-ui is nested, e.g. 'react-ui/node_modules/', this will still catch it.

# Build output / distribution folders for frontend projects
# These are often specified within a .gitignore inside the frontend project folder itself,
# which is generated by tools like Create React App or Vite.
# If 'react-ui' is at the root, you might have:
# react-ui/build/
# react-ui/dist/
# react-ui/.next/
# react-ui/.nuxt/
# react-ui/.svelte-kit/
# react-ui/.out/
# react-ui/public/build/ # Example
# react-ui/.docusaurus/ # Docusaurus specific
# react-ui/dist_electron/ # Vue specific

# More generic frontend build/dist folders if they are at the root
# (less likely if your React app is in a subfolder like 'react-ui/')
# build/
# dist/

# Frontend Test & Coverage reports
# react-ui/coverage/ # Example if coverage is inside the react-ui folder
# junit.xml # Common for test reports
# jest.config.js.xml # Jest specific

# --- Project Specific ---
# Ignore generated data files (CSV, Excel, DB)
*.csv
*.xls
*.xlsx
*.db
*.db-journal* # SQLite journal files
*.sqlite
*.sqlite3
*.sqlite3-journal* # SQLite3 journal files
*.sql # Be careful if you have manually written SQL scripts you want to keep

# Ignore log files
*.log
*.trace

# Ignore the entire 'reference' folder and its contents (as per your existing rule)
reference/

# Ignore LangGraph API folder (if generated locally)
.langgraph_api/

# Ignore specific static assets if not needed (like UI screenshots)
assistant/finance-assistant/static/studio_ui.png

# Data directory - good to ignore to prevent committing datasets
data/

# --- Miscellaneous ---
# Add any other specific files or patterns to ignore below
# Example: temp_output.txt